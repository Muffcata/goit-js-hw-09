{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,QAClCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAASJ,SAASC,cAAc,wBAEtC,IAAII,EAAaH,EAAWI,MACxBC,EAAYJ,EAAUG,MACtBE,EAAW,EA4CfT,EAASU,iBAAiB,UA1CEC,IAG1B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EACEM,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBX,QAAiBC,QAI1CG,EACEK,EAAAxB,GAASyB,OAAOE,QACd,sBAAoBZ,QAAiBC,OAAgB,GAI1DA,EAAW,G,CAnBlBH,EAAMe,iBAuBN,IAAK,IAAIC,EAAI,EAAGA,GAAKtB,EAAOE,MAAOoB,IACjClB,EAAWkB,EACXf,EAAcH,EAAUH,GACrBsB,MAAKrB,GAAS,EAAGsB,SAAAC,EAAUC,WAAAC,MAC1BV,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBM,EAAY,QAASE,MAAe,IAG5DC,OAAMC,GAAS,EAAGL,SAAAM,EAAUJ,WAAAK,MAC3Bd,EAAAxB,GAASyB,OAAOE,QACd,sBAAoBU,EAAU,QAASC,MAAe,IAI9D9B,GAAcE,EACdC,GAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst feedback = document.querySelector('form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nlet delayValue = firstDelay.value;\nlet stepValue = delayStep.value;\nlet position = 0;\n\nconst fetchUserFromServer = event => {\n  event.preventDefault();\n\n  function createPromise(position, delayValue) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${delayValue}ms`\n            )\n          );\n        } else {\n          reject(\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${delayValue}ms`\n            )\n          );\n        }\n      }, delayValue);\n    });\n  }\n\n  for (let i = 1; i <= amount.value; i++) {\n    position = i;\n    createPromise(position, delayValue)\n      .then(value => ({ position, delayValue }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position - 1} in ${delayValue}ms`\n        );\n      })\n      .catch(error => ({ position, delayValue }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position - 1} in ${delayValue}ms`\n        );\n      });\n  }\n  delayValue = +stepValue;\n  position++;\n};\n\nfeedback.addEventListener('submit', fetchUserFromServer);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$feedback","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delayValue","value","$47d4ff9957288465$var$stepValue","$47d4ff9957288465$var$position","addEventListener","event","createPromise","position1","delayValue1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","preventDefault","i","then","position","position2","delayValue","delayValue2","catch","error","position3","delayValue3"],"version":3,"file":"03-promises.4939fb98.js.map"}