{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,QAClCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAASJ,SAASC,cAAc,wBAEtC,IAAII,EAAW,EA6CfN,EAASO,iBAAiB,UA3CEC,IAC1BA,EAAMC,iBAEN,IAAIC,EAAaP,EAAWQ,cACxBC,EAAYR,EAAUO,cAE1B,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,E,WAAUC,IAEpBG,EAAO,CAAEK,SAAAT,E,WAAUC,GAAa,GAEjCA,EAAW,G,CAIlB,IAAK,IAAIS,EAAI,EAAGA,GAAKnB,EAAOoB,MAAOD,IACjClB,EAAWkB,EACXX,EAAcP,EAAUI,GACrBgB,MAAKD,IACJE,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBJ,EAAIF,eAAmBE,EAAEV,gBAEhDe,QAAQC,IACN,uBAAqBN,EAAIF,eAAmBE,EAAEV,eAAmB,IAGpEiB,OAAMC,IACLN,EAAA7B,GAAS8B,OAAOM,QACd,sBAAoBD,EAAIV,eAAmBU,EAAElB,gBAE/Ce,QAAQC,IACN,sBAAoBE,EAAEV,eAAmBU,EAAElB,eAAmB,IAIpEL,GAAcE,EACdN,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst feedback = document.querySelector('form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nlet position = 0;\n\nconst fetchUserFromServer = event => {\n  event.preventDefault();\n\n  let delayValue = firstDelay.valueAsNumber;\n  let stepValue = delayStep.valueAsNumber;\n\n  function createPromise(position, delayValue) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delayValue });\n        } else {\n          reject({ position, delayValue });\n        }\n      }, delayValue);\n    });\n  }\n\n  for (let i = 1; i <= amount.value; i++) {\n    position = i;\n    createPromise(position, delayValue)\n      .then(value => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${value.position} in ${value.delayValue}ms`\n        );\n        console.log(\n          `✅ Fulfilled promise ${value.position} in ${value.delayValue}ms`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${error.position} in ${error.delayValue}ms`\n        );\n        console.log(\n          `❌ Rejected promise ${error.position} in ${error.delayValue}ms`\n        );\n      });\n\n    delayValue += stepValue;\n    position++;\n  }\n};\nfeedback.addEventListener('submit', fetchUserFromServer);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$feedback","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$position","addEventListener","event","preventDefault","delayValue1","valueAsNumber","stepValue","createPromise","position1","delayValue","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","i","value","then","$parcel$interopDefault","Notify","success","console","log","catch","error","failure"],"version":3,"file":"03-promises.f2aafd4d.js.map"}