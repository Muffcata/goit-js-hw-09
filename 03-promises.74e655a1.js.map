{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,QAClCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAASJ,SAASC,cAAc,wBAElCI,EAAaH,EAAWI,MACxBC,EAAYJ,EAAUG,MA4C1BP,EAASS,iBAAiB,UAzCE,SAAAC,GAG1B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EACEM,EAAAvB,GAASwB,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAiBY,OAAXX,EAAW,QAIvDG,EACEK,EAAAvB,GAASwB,OAAOG,QACd,sBAAuCD,OAAfZ,EAAS,QAAiBY,OAAXX,EAAW,O,GAIvDA,E,IAnBPH,EAAMgB,iBAuBN,IAAK,IAAIC,EAAI,EAAGA,GAAKtB,EAAOE,MAAOoB,IAEjChB,EADWgB,EACarB,GACrBsB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUC,EAAUH,EAAVI,WACjBZ,EAAAvB,GAASwB,OAAOC,QACd,uBAA4CC,OAAnBM,EAAW,EAAE,QAAiBN,OAAXQ,EAAW,M,IAG1DE,OAAM,SAAAL,G,IAAGM,EAAQN,EAARE,SAAUK,EAAUP,EAAVI,WAClBZ,EAAAvB,GAASwB,OAAOG,QACd,sBAAyCD,OAAnBW,EAAW,EAAE,QAAiBX,OAAXY,EAAW,M,IAI5D9B,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst feedback = document.querySelector('form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nlet delayValue = firstDelay.value;\nlet stepValue = delayStep.value;\nlet position = 0;\n\nconst fetchUserFromServer = event => {\n  event.preventDefault();\n\n  function createPromise(position, delayValue) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${delayValue}ms`\n            )\n          );\n        } else {\n          reject(\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${delayValue}ms`\n            )\n          );\n        }\n      }, delayValue);\n    });\n  }\n\n  for (let i = 1; i <= amount.value; i++) {\n    position = i;\n    createPromise(position, delayValue)\n      .then(({ position, delayValue }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position - 1} in ${delayValue}ms`\n        );\n      })\n      .catch(({ position, delayValue }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position - 1} in ${delayValue}ms`\n        );\n      });\n  }\n  delayValue = +stepValue;\n  position++;\n};\nfeedback.addEventListener('submit', fetchUserFromServer);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$feedback","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$delayValue","value","$ce04d3a99e08e73b$var$stepValue","addEventListener","event","createPromise","position1","delayValue1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","preventDefault","i","then","param","position2","position","delayValue2","delayValue","catch","position3","delayValue3"],"version":3,"file":"03-promises.74e655a1.js.map"}