{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAWC,SAASC,cAAc,QAClCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAASJ,SAASC,cAAc,wBA+CtCF,EAASM,iBAAiB,UA3CE,SAAAC,GAC1BA,EAAMC,iBAEN,IAAIC,EAAaN,EAAWO,cACxBC,EAAYP,EAAUM,cAE1B,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUC,eAEpBG,EAAO,CAAEK,SAAAT,EAAUC,c,GAEpBA,E,IAIP,IAAK,IAAIS,EAAI,EAAGA,GAAKlB,EAAOmB,MAAOD,IAEjCX,EADWW,EACad,GACrBgB,MAAK,SAAAD,GACJE,EAAA5B,GAAS6B,OAAOC,QACd,uBAA8CC,OAArBL,EAAMF,SAAS,QAAuBO,OAAjBL,EAAMV,WAAW,OAEjEgB,QAAQC,IACN,uBAA8CF,OAArBL,EAAMF,SAAS,QAAuBO,OAAjBL,EAAMV,WAAW,M,IAGlEkB,OAAM,SAAAC,GACLP,EAAA5B,GAAS6B,OAAOO,QACd,sBAA6CL,OAArBI,EAAMX,SAAS,QAAuBO,OAAjBI,EAAMnB,WAAW,OAEhEgB,QAAQC,IACN,sBAA2CF,OAArBI,EAAMX,SAAS,QAAuBO,OAAjBI,EAAMnB,WAAW,M,IAIlEL,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst feedback = document.querySelector('form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nlet position = 0;\n\nconst fetchUserFromServer = event => {\n  event.preventDefault();\n\n  let delayValue = firstDelay.valueAsNumber;\n  let stepValue = delayStep.valueAsNumber;\n\n  function createPromise(position, delayValue) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delayValue });\n        } else {\n          reject({ position, delayValue });\n        }\n      }, delayValue);\n    });\n  }\n\n  for (let i = 1; i <= amount.value; i++) {\n    position = i;\n    createPromise(position, delayValue)\n      .then(value => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${value.position} in ${value.delayValue}ms`\n        );\n        console.log(\n          `✅ Fulfilled promise ${value.position} in ${value.delayValue}ms`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${error.position} in ${error.delayValue}ms`\n        );\n        console.log(\n          `❌ Rejected promise ${error.position} in ${error.delayValue}ms`\n        );\n      });\n\n    delayValue += stepValue;\n    position++;\n  }\n};\nfeedback.addEventListener('submit', fetchUserFromServer);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$feedback","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","delayValue1","valueAsNumber","stepValue","createPromise","position1","delayValue","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","i","value","then","$parcel$interopDefault","Notify","success","concat","console","log","catch","error","failure"],"version":3,"file":"03-promises.8820f899.js.map"}